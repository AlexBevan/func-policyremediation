{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "FunctionName": {
            "defaultValue": "PolicyRemediation",
            "type": "String",
            "metadata": {
                "description": "Specifies the name of the Function App."
            }
        },
        "MG_NAME": {
            "type": "String",
            "metadata": {
                "description": "Specifies the name of the management group to target."
            }
        },
        "FunctionSchedule": {
            "defaultValue": "0 */2 * * *",
            "type": "String",
            "metadata": {
                "description": "For a `TimerTrigger` to work, you provide a schedule in the form of a [cron expression](https://en.wikipedia.org/wiki/Cron#CRON_expression)(See the link for full details). A cron expression is a string with 6 separate expressions which represent a given schedule via patterns. The pattern we use to represent every 1 hour is `0 0 * * * *`. This, in plain text, means: When seconds is equal to 0, minutes is divisible by 5, for any hour, day of the month, month, day of the week, or year"
            }
        }
    },
    "variables": {
        "FunctionName": "[concat(toLower(parameters('FunctionName')), uniqueString(resourceGroup().id))]",
        "StorageAccountName": "[concat(substring(variables('FunctionName'), 0, 20), 'sa')]",
        "KeyVaultName": "[concat(substring(variables('FunctionName'), 0, 20), 'kv')]",
        "StorageSuffix": "[environment().suffixes.storage]",
        "roleDefinitionIdContributor": "b24988ac-6180-42a0-ab88-20f7382dd24c"
    },
    "resources": [
        {
            "type": "Microsoft.Insights/components",
            "apiVersion": "2015-05-01",
            "name": "[variables('FunctionName')]",
            "location": "[resourceGroup().location]",
            "kind": "web",
            "properties": {
                "Application_Type": "web",
                "ApplicationId": "[variables('FunctionName')]"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "name": "[variables('StorageAccountName')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                }
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2018-02-01",
            "name": "[variables('FunctionName')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "S1",
                "tier": "Standard"
            },
            "kind": "functionapp",
            "properties": {
                "name": "[variables('FunctionName')]",
                "workerSize": "0",
                "workerSizeId": "0",
                "numberOfWorkers": "1"
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2018-11-01",
            "name": "[variables('FunctionName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('StorageAccountName'))]",
                "[resourceId('Microsoft.Web/serverfarms', variables('FunctionName'))]",
                "[resourceId('Microsoft.Insights/components', variables('FunctionName'))]"
            ],
            "kind": "functionapp",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "name": "[variables('FunctionName')]",
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('FunctionName'))]",
                "httpsOnly": true,
                "clientAffinityEnabled": true,
                "alwaysOn": true,
                "siteConfig": {
                    "powerShellVersion": "~7"
                }
            },
            "resources": [
                {
                    "type": "config",
                    "apiVersion": "2018-11-01",
                    "name": "appsettings",
                    "dependsOn": [
                        "[concat('Microsoft.Web/sites/', variables('FunctionName'))]"
                    ],
                    "properties": {
                        "FUNCTIONS_EXTENSION_VERSION": "~3",
                        "FUNCTIONS_WORKER_RUNTIME": "powershell",
                        "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(resourceId('Microsoft.insights/components', variables('FunctionName')), '2015-05-01').InstrumentationKey]",
                        "APPLICATIONINSIGHTS_CONNECTION_STRING": "[reference(resourceId('microsoft.insights/components', variables('FunctionName')), '2015-05-01').ConnectionString]",
                        "AzureWebJobsStorage": "[concat('DefaultEndpointsProtocol=https;AccountName=', toLower(variables('StorageAccountName')),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('StorageAccountName')), '2019-06-01').keys[0].value, ';EndpointSuffix=',toLower(variables('StorageSuffix')))]",
                        "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING": "[concat('DefaultEndpointsProtocol=https;AccountName=', toLower(variables('StorageAccountName')),';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('StorageAccountName')), '2019-06-01').keys[0].value, ';EndpointSuffix=',toLower(variables('StorageSuffix')))]",
                        "WEBSITE_CONTENTSHARE": "[toLower(variables('FunctionName'))]",
                        "Schedule": "[parameters('FunctionSchedule')]",
                        "MG_NAME": "[parameters('MG_NAME')]",
                        "WEBSITE_RUN_FROM_PACKAGE": "https://alexbevan.github.io/func-policyremediation/func-policyremediation.zip"
                    }
                },
                {
                    "type": "Microsoft.Resources/deployments",
                    "name": "[concat('RoleAssignment-', variables('FunctionName'))]",
                    "apiVersion": "2020-06-01",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', variables('FunctionName'))]"
                    ],
                    "properties": {
                        "mode": "Incremental",
                        "template": {
                            "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                            "contentVersion": "1.0.0.0",
                            "resources": [
                                {
                                    "apiVersion": "2020-04-01-preview",
                                    "type": "Microsoft.Authorization/roleAssignments",
                                    "name": "[concat(parameters('storageAccountName'), '/Microsoft.Authorization/', guid(subscription().subscriptionId, parameters('logicAppName')))]",
                                    "dependsOn": [
                                        "[resourceId('Microsoft.Web/sites', variables('FunctionName'))]"
                                    ],
                                    "properties": {
                                        "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', variables('roleDefinitionIdContributor'))]",
                                        "principalId": "[reference(resourceId('Microsoft.Web/sites', variables('FunctionName')),'2019-08-01', 'full').identity.principalId]",
                                        "scope": "/"
                                    }
                                }
                            ]
                        }
                    }
                }
            ]
        }
    ]
}